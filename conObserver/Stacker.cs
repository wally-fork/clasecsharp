// Implementaci√≥n del Observer pattern	..................
// 					..................
//     Subject=Stacker			...    	       ...
//     -state	                	...    	       ...
//     ---------------             	...    	       ...
//     -Notify()      			... +Update()  ...
//     +Attach        			...    	       ...
//     +Detach        			...    	       ...
//                    			...    	       ...
//                    			...    	       ...
// 	.........    ._________________....	       ... IObserver
//  ..	 .  ...........		  .	...            ...
// .		 ...			...	       ...
// ..	 .			  .  ...............|.....
// 	...	 .			...... .....|.....
// 	  ..   ..				  ..|..
// 	     ...			       .....|.....
// 	    ...				     .......   ....
// 	      .				     ....	 ...
// 	      .				    ...		 ...
// 	      .		tiene un Observer-<>...		....Observer
// 	      ___________________________.  .. ..      ...-subject
// 		                	     ...... ..... -state
// 						......	  +Update()


 /////////////////////////////////////////////////////////////
 // DEBE DE NOTIFICAR A LOS OBSERVADORES!!!!!!!!!!!!!!!!!!! //
 /////////////////////////////////////////////////////////////

class Stacker{
  static void Main(){
    StackImpl1 stacy = new StackImpl1();
    Observer StackObserver1 = new Observer();
    Observer StackObserver2 = new Observer();
    stacy.attach(StackObserver1);
    stacy.attach(StackObserver2);
    stacy.howMany();
    stacy.pushStack("Stella");
    stacy.pushStack("was");
    stacy.pushStack("a");
    stacy.pushStack("Diver");
    stacy.pushStack("and");
    stacy.pushStack("she");
    stacy.pushStack("was");
    stacy.pushStack("always");
    stacy.pushStack("down");

    stacy.howMany();
    stacy.popStack();
    stacy.howMany();
  }
}
// crear un arreglo al que le vamos a meter diez cosas